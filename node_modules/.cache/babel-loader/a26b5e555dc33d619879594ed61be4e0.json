{"ast":null,"code":"var _jsxFileName = \"D:\\\\STUDIES\\\\N4_K2_L\\u1EACP TR\\xCCNH N\\xC2NG CAO\\\\land-project-react\\\\src\\\\sites\\\\user\\\\containers\\\\new\\\\news-slide.js\";\nimport React from 'react';\nimport NewItem from './new-thumbnail';\nimport { Card, CardImg, CardText, CardBody, Button, CardTitle, Row, Col, Carousel, CarouselItem, CarouselControl, CarouselIndicators, CarouselCaption } from 'reactstrap';\nconst NUM_NEW_PER_SLIDE = 3;\n\nclass SlideNews extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getNewSlides = () => {\n      let numSlides = this.getNumberNewsSlides();\n      let items = [];\n\n      for (let i = 0; i < numSlides; i++) {\n        let news = [];\n        let startIndex = i * NUM_NEW_PER_SLIDE;\n\n        for (let j = 0; j < NUM_NEW_PER_SLIDE; j++) {\n          if (startIndex + j < this.props.slideItems.length) {\n            news.push(this.props.slideItems[startIndex + j]);\n          }\n        }\n\n        items.push(React.createElement(CarouselItem, {\n          key: i + 1,\n          onExiting: () => {},\n          onExited: () => {},\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, news.map((d, index) => {\n          return React.createElement(\"div\", {\n            key: index,\n            className: \"col-md-4 item-news\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }, React.createElement(NewItem, {\n            title: d.NewName,\n            image: d.NewImage,\n            data: d,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }));\n        }))));\n      }\n\n      return items;\n    };\n\n    this.getNumberNewsSlides = () => {\n      let totalNews = this.props.slideItems.length;\n      return totalNews % NUM_NEW_PER_SLIDE ? parseInt(totalNews / NUM_NEW_PER_SLIDE) + 1 : totalNews / NUM_NEW_PER_SLIDE;\n    };\n\n    this.nextNewSlide = () => {\n      let numberSlides = this.getNumberNewsSlides();\n      let newsCarouselIndex = this.state.newsCarouselIndex;\n\n      if (newsCarouselIndex + 1 < numberSlides) {\n        newsCarouselIndex++;\n        this.setState({\n          newsCarouselIndex\n        });\n      }\n    };\n\n    this.prevNewSlide = () => {\n      let newsCarouselIndex = this.state.newsCarouselIndex;\n\n      if (newsCarouselIndex - 1 >= 0) {\n        newsCarouselIndex--;\n        this.setState({\n          newsCarouselIndex\n        });\n      }\n    };\n\n    this.state = {\n      activeIndex: 0,\n      animating: false,\n      newsCarouselIndex: 0\n    };\n  }\n\n  onClickDetail() {\n    this.props.history.push({\n      pathname: \"/tin-dang\",\n      state: {\n        product: this.props.slideItems\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container product-news-sold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Carousel, {\n      activeIndex: this.state.newsCarouselIndex,\n      next: this.nextNewSlide,\n      previous: this.prevNewSlide,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.getNewSlides(), React.createElement(CarouselControl, {\n      direction: \"prev\",\n      directionText: \"Previous\",\n      onClickHandler: this.prevNewSlide,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(CarouselControl, {\n      direction: \"next\",\n      directionText: \"Next\",\n      onClickHandler: this.nextNewSlide,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default SlideNews;","map":{"version":3,"sources":["D:/STUDIES/N4_K2_LẬP TRÌNH NÂNG CAO/land-project-react/src/sites/user/containers/new/news-slide.js"],"names":["React","NewItem","Card","CardImg","CardText","CardBody","Button","CardTitle","Row","Col","Carousel","CarouselItem","CarouselControl","CarouselIndicators","CarouselCaption","NUM_NEW_PER_SLIDE","SlideNews","Component","constructor","props","getNewSlides","numSlides","getNumberNewsSlides","items","i","news","startIndex","j","slideItems","length","push","map","d","index","NewName","NewImage","totalNews","parseInt","nextNewSlide","numberSlides","newsCarouselIndex","state","setState","prevNewSlide","activeIndex","animating","onClickDetail","history","pathname","product","render"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport NewItem from './new-thumbnail'\r\n\r\nimport {\r\n    Card, CardImg, CardText, CardBody, Button,\r\n    CardTitle, Row, Col, Carousel, CarouselItem, CarouselControl, CarouselIndicators, CarouselCaption\r\n} from 'reactstrap'\r\n\r\nconst NUM_NEW_PER_SLIDE = 3\r\n\r\nclass SlideNews extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            activeIndex: 0,\r\n            animating: false,\r\n            newsCarouselIndex: 0,\r\n        }\r\n    }\r\n\r\n    getNewSlides = () => {\r\n        let numSlides = this.getNumberNewsSlides()\r\n        let items = []\r\n        for (let i = 0; i < numSlides; i++) {\r\n            let news = []\r\n            let startIndex = i * NUM_NEW_PER_SLIDE\r\n            for (let j = 0; j < NUM_NEW_PER_SLIDE; j++) {\r\n                if (startIndex + j < this.props.slideItems.length) {\r\n                    news.push(this.props.slideItems[startIndex + j])\r\n                }\r\n\r\n            }\r\n            items.push(\r\n                <CarouselItem key={i + 1} onExiting={() => { }} onExited={() => { }}>\r\n                    <Row>\r\n                        {news.map((d, index) => {\r\n                            return (\r\n                                <div key={index} className=\"col-md-4 item-news\">\r\n                                    <NewItem title={d.NewName}\r\n                                             image={d.NewImage}\r\n                                             data={d}\r\n                                    />\r\n                                </div>\r\n                                \r\n                            )\r\n                        })}\r\n                    </Row>\r\n                </CarouselItem>\r\n            )\r\n        }\r\n        return items\r\n    }\r\n\r\n    getNumberNewsSlides = () => {\r\n        let totalNews = this.props.slideItems.length\r\n        return totalNews % NUM_NEW_PER_SLIDE ? parseInt(totalNews / NUM_NEW_PER_SLIDE) + 1 : totalNews / NUM_NEW_PER_SLIDE\r\n    }\r\n\r\n    nextNewSlide = () => {\r\n        let numberSlides = this.getNumberNewsSlides()\r\n        let newsCarouselIndex = this.state.newsCarouselIndex\r\n        if ((newsCarouselIndex + 1) < numberSlides) {\r\n            newsCarouselIndex++\r\n            this.setState({ newsCarouselIndex })\r\n        }\r\n    }\r\n\r\n    prevNewSlide = () => {\r\n        let newsCarouselIndex = this.state.newsCarouselIndex\r\n        if ((newsCarouselIndex - 1) >= 0) {\r\n            newsCarouselIndex--\r\n            this.setState({ newsCarouselIndex })\r\n        }\r\n    }\r\n\r\n\r\n    onClickDetail(){\r\n        this.props.history.push({\r\n            pathname:\"/tin-dang\",\r\n            state:{product:this.props.slideItems}\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='container product-news-sold'>\r\n                <Carousel activeIndex={this.state.newsCarouselIndex} next={this.nextNewSlide} previous={this.prevNewSlide}>\r\n                    {this.getNewSlides()}\r\n                    <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={this.prevNewSlide} />\r\n                    <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={this.nextNewSlide} />\r\n                </Carousel>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default SlideNews"]},"metadata":{},"sourceType":"module"}