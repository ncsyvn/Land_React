{"ast":null,"code":"import client from '../utils/client-utils';\nimport stringUtils from '../resources/stringUtils';\nimport constants from '../resources/strings';\nimport datacacheProvider from './datacache-provider';\nimport clientUtils from '../utils/client-utils';\n\nvar md5 = require('md5');\n\nexport default {\n  getByPage(param) {\n    let parameters = (param.pagesize ? '?pagesize=' + param.pagesize : '?pagesize=' + 10) + (param.pagenumber ? '&pagenumber=' + param.pagenumber : '&pagenumber=' + -0);\n    return new Promise((resolve, reject) => {\n      clientUtils.requestApi(\"get\", constants.api.new_category.getByPage + parameters, {}).then(x => {\n        resolve(x);\n      }).catch(e => {\n        reject(e);\n      });\n    });\n  },\n\n  getAll() {\n    return new Promise((resolve, reject) => {\n      clientUtils.requestApi(\"get\", constants.api.new_category.getAll, {}).then(x => {\n        resolve(x);\n      }).catch(e => {\n        reject(e);\n      });\n    });\n  },\n\n  createNew(param) {\n    return new Promise((resolve, reject) => {\n      clientUtils.requestApi('post', constants.api.new_category.create, param).then(x => {\n        resolve(x);\n      }).catch(e => {\n        reject(e);\n      });\n    });\n  },\n\n  // updateNew(param){\n  //     return new Promise((resolve,reject)=>{\n  //         clientUtils.requestApi('put',constants.api.news.)\n  //     })\n  // },\n  deleteNewCategory(id) {\n    return new Promise((resolve, reject) => {\n      clientUtils.requestApi('delete', constants.api.new_category.delete + \"?newcategoryid=\" + id).then(x => {\n        resolve(x);\n      }).catch(e => {\n        reject(e);\n      });\n    });\n  }\n\n};","map":{"version":3,"sources":["C:/Users/NCSYVN/Desktop/land-project-react/src/data-access/new-category-provider.js"],"names":["client","stringUtils","constants","datacacheProvider","clientUtils","md5","require","getByPage","param","parameters","pagesize","pagenumber","Promise","resolve","reject","requestApi","api","new_category","then","x","catch","e","getAll","createNew","create","deleteNewCategory","id","delete"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,uBAAnB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,iBAAP,MAA8B,sBAA9B;AACA,OAAOC,WAAP,MAAwB,uBAAxB;;AAEA,IAAIC,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAjB;;AACA,eAAe;AAEXC,EAAAA,SAAS,CAACC,KAAD,EAAQ;AACb,QAAIC,UAAU,GACV,CAACD,KAAK,CAACE,QAAN,GAAiB,eAAeF,KAAK,CAACE,QAAtC,GAAiD,eAAe,EAAjE,KACCF,KAAK,CAACG,UAAN,GAAmB,iBAAiBH,KAAK,CAACG,UAA1C,GAAuD,iBAAiB,CAAE,CAD3E,CADJ;AAGA,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCV,MAAAA,WAAW,CAACW,UAAZ,CAAuB,KAAvB,EAA8Bb,SAAS,CAACc,GAAV,CAAcC,YAAd,CAA2BV,SAA3B,GAAuCE,UAArE,EAAiF,EAAjF,EAAqFS,IAArF,CAA0FC,CAAC,IAAI;AAC3FN,QAAAA,OAAO,CAACM,CAAD,CAAP;AACH,OAFD,EAEGC,KAFH,CAESC,CAAC,IAAI;AACVP,QAAAA,MAAM,CAACO,CAAD,CAAN;AACH,OAJD;AAKH,KANM,CAAP;AAOH,GAbU;;AAeXC,EAAAA,MAAM,GAAG;AACL,WAAO,IAAIV,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCV,MAAAA,WAAW,CAACW,UAAZ,CAAuB,KAAvB,EAA8Bb,SAAS,CAACc,GAAV,CAAcC,YAAd,CAA2BK,MAAzD,EAAiE,EAAjE,EAAqEJ,IAArE,CAA0EC,CAAC,IAAI;AAC3EN,QAAAA,OAAO,CAACM,CAAD,CAAP;AACH,OAFD,EAEGC,KAFH,CAESC,CAAC,IAAI;AACVP,QAAAA,MAAM,CAACO,CAAD,CAAN;AACH,OAJD;AAKH,KANM,CAAP;AAOH,GAvBU;;AAyBXE,EAAAA,SAAS,CAACf,KAAD,EAAO;AACZ,WAAO,IAAII,OAAJ,CAAY,CAACC,OAAD,EAASC,MAAT,KAAkB;AACjCV,MAAAA,WAAW,CAACW,UAAZ,CAAuB,MAAvB,EAA8Bb,SAAS,CAACc,GAAV,CAAcC,YAAd,CAA2BO,MAAzD,EAAgEhB,KAAhE,EAAuEU,IAAvE,CAA4EC,CAAC,IAAE;AAC3EN,QAAAA,OAAO,CAACM,CAAD,CAAP;AACH,OAFD,EAEGC,KAFH,CAESC,CAAC,IAAE;AACRP,QAAAA,MAAM,CAACO,CAAD,CAAN;AACH,OAJD;AAKH,KANM,CAAP;AAOH,GAjCU;;AAqCX;AACA;AACA;AACA;AACA;AAEAI,EAAAA,iBAAiB,CAACC,EAAD,EAAI;AACjB,WAAO,IAAId,OAAJ,CAAY,CAACC,OAAD,EAASC,MAAT,KAAkB;AACjCV,MAAAA,WAAW,CAACW,UAAZ,CAAuB,QAAvB,EAAgCb,SAAS,CAACc,GAAV,CAAcC,YAAd,CAA2BU,MAA3B,GAAkC,iBAAlC,GAAoDD,EAApF,EAAwFR,IAAxF,CAA6FC,CAAC,IAAE;AAC5FN,QAAAA,OAAO,CAACM,CAAD,CAAP;AACH,OAFD,EAEGC,KAFH,CAESC,CAAC,IAAE;AACRP,QAAAA,MAAM,CAACO,CAAD,CAAN;AACH,OAJD;AAKH,KANM,CAAP;AAOH;;AAnDU,CAAf","sourcesContent":["import client from '../utils/client-utils';\r\nimport stringUtils from '../resources/stringUtils';\r\nimport constants from '../resources/strings';\r\nimport datacacheProvider from './datacache-provider';\r\nimport clientUtils from '../utils/client-utils';\r\n\r\nvar md5 = require('md5');\r\nexport default {\r\n\r\n    getByPage(param) {\r\n        let parameters =\r\n            (param.pagesize ? '?pagesize=' + param.pagesize : '?pagesize=' + 10) +\r\n            (param.pagenumber ? '&pagenumber=' + param.pagenumber : '&pagenumber=' + - 0)\r\n        return new Promise((resolve, reject) => {\r\n            clientUtils.requestApi(\"get\", constants.api.new_category.getByPage + parameters, {}).then(x => {\r\n                resolve(x);\r\n            }).catch(e => {\r\n                reject(e);\r\n            })\r\n        })\r\n    },\r\n\r\n    getAll() {\r\n        return new Promise((resolve, reject) => {\r\n            clientUtils.requestApi(\"get\", constants.api.new_category.getAll ,{}).then(x => {\r\n                resolve(x);\r\n            }).catch(e => {\r\n                reject(e);\r\n            })\r\n        });\r\n    },\r\n\r\n    createNew(param){\r\n        return new Promise((resolve,reject)=>{\r\n            clientUtils.requestApi('post',constants.api.new_category.create,param).then(x=>{\r\n                resolve(x)\r\n            }).catch(e=>{\r\n                reject(e)\r\n            })\r\n        })\r\n    },\r\n\r\n    \r\n\r\n    // updateNew(param){\r\n    //     return new Promise((resolve,reject)=>{\r\n    //         clientUtils.requestApi('put',constants.api.news.)\r\n    //     })\r\n    // },\r\n\r\n    deleteNewCategory(id){\r\n        return new Promise((resolve,reject)=>{\r\n            clientUtils.requestApi('delete',constants.api.new_category.delete+\"?newcategoryid=\"+id).then(x=>{\r\n                resolve(x)\r\n            }).catch(e=>{\r\n                reject(e)\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n}   "]},"metadata":{},"sourceType":"module"}