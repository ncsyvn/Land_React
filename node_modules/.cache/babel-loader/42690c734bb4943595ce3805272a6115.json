{"ast":null,"code":"import client from '../utils/client-utils';\nimport stringUtils from '../resources/stringUtils';\nimport constants from '../resources/strings';\nimport datacacheProvider from './datacache-provider';\nimport clientUtils from '../utils/client-utils';\n\nvar md5 = require('md5');\n\nexport default {\n  getAccountStorage() {\n    var user = datacacheProvider.read(\"\", constants.key.storage.current_account);\n    return user;\n  },\n\n  saveAccountStorage(account) {\n    return datacacheProvider.save(\"\", constants.key.storage.current_account, account);\n  },\n\n  xx() {\n    client.serverApi = \"\";\n  },\n\n  login(body) {\n    // let parameter = {\n    //     username,\n    //     password,\n    //     grant_type\n    // }\n    // console.log(parameter)\n    return new Promise((resolve, reject) => {\n      clientUtils.requestApi(\"post\", constants.api.user.login, body).then(x => {\n        resolve(x);\n      }).catch(e => {\n        reject(e);\n      });\n    });\n  },\n\n  search(param) {\n    let parameters = (param.page ? '?page=' + param.page : '?page=' + -1) + (param.size ? '&size=' + param.size : '&size=' + -1) + (param.queryString ? '&queryString=' + param.queryString : '') + (param.active ? '&active=' + param.active : '&active=' + -1) + (param.specialistId ? '&specialistId=' + param.specialistId : '&specialistId=' + -1) + (param.type ? '&type=' + param.type : '&type=' + -1) + (param.roleId ? '&roleId=' + param.roleId : '&roleId=' + -1) + (param.style ? '&style=' + param.style : '&style=' + -1);\n    return new Promise((resolve, reject) => {\n      clientUtils.requestApi(\"get\", constants.api.user.search + parameters, {}).then(x => {\n        resolve(x);\n      }).catch(e => {\n        reject(e);\n      });\n    });\n  },\n\n  updatePassword(id, object) {\n    return new Promise((resolve, reject) => {\n      clientUtils.requestApi(\"put\", constants.api.user.updatePassword + \"/\" + id, object).then(x => {\n        resolve(x);\n      }).catch(e => {\n        reject(e);\n      });\n    });\n  },\n\n  create(object) {\n    return new Promise((resolve, reject) => {\n      clientUtils.requestApi(\"post\", constants.api.user.create, object).then(x => {\n        resolve(x);\n      }).catch(e => {\n        reject(e);\n      });\n    });\n  },\n\n  update(id, object) {\n    return new Promise((resolve, reject) => {\n      clientUtils.requestApi(\"put\", constants.api.user.update + \"/\" + id, object).then(x => {\n        resolve(x);\n      }).catch(e => {\n        reject(e);\n      });\n    });\n  },\n\n  block(id, object) {\n    return new Promise((resolve, reject) => {\n      clientUtils.requestApi(\"put\", constants.api.user.block + \"/\" + id, object).then(x => {\n        resolve(x);\n      }).catch(e => {\n        reject(e);\n      });\n    });\n  },\n\n  active(id, object) {\n    return new Promise((resolve, reject) => {\n      clientUtils.requestApi(\"put\", constants.api.user.active + \"/\" + id, object).then(x => {\n        resolve(x);\n      }).catch(e => {\n        reject(e);\n      });\n    });\n  },\n\n  getDetail(id) {\n    return new Promise((resolve, reject) => {\n      clientUtils.requestApi(\"get\", constants.api.user.detail + \"/\" + id).then(x => {\n        resolve(x);\n      }).catch(e => {\n        reject(e);\n      });\n    });\n  },\n\n  register(object) {\n    return new Promise((resolve, reject) => {\n      clientUtils.requestApi(\"post\", constants.api.user.register, object).then(x => {\n        resolve(x);\n      }).catch(e => {\n        reject(e);\n      });\n    });\n  },\n\n  getAll() {\n    return new Promise((resolve, reject) => {\n      clientUtils.requestApi(\"get\", constants.api.user.getAll, {}).then(x => {\n        resolve(x);\n      }).catch(e => {\n        reject(e);\n      });\n    });\n  }\n\n};","map":{"version":3,"sources":["D:/STUDIES/N4_K2_LẬP TRÌNH NÂNG CAO/land-project-react/src/data-access/user-provider.js"],"names":["client","stringUtils","constants","datacacheProvider","clientUtils","md5","require","getAccountStorage","user","read","key","storage","current_account","saveAccountStorage","account","save","xx","serverApi","login","body","Promise","resolve","reject","requestApi","api","then","x","catch","e","search","param","parameters","page","size","queryString","active","specialistId","type","roleId","style","updatePassword","id","object","create","update","block","getDetail","detail","register","getAll"],"mappings":"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","sourcesContent":["import client from '../utils/client-utils';\r\nimport stringUtils from '../resources/stringUtils';\r\nimport constants from '../resources/strings';\r\nimport datacacheProvider from './datacache-provider';\r\nimport clientUtils from '../utils/client-utils';\r\n\r\nvar md5 = require('md5');\r\nexport default {\r\n    getAccountStorage() {\r\n        var user = datacacheProvider.read(\"\", constants.key.storage.current_account);\r\n        return user;\r\n    },\r\n    saveAccountStorage(account) {\r\n        return datacacheProvider.save(\"\", constants.key.storage.current_account, account);\r\n    },\r\n    xx() {\r\n        client.serverApi = \"\";\r\n    },\r\n    \r\n    login(body){\r\n        // let parameter = {\r\n        //     username,\r\n        //     password,\r\n        //     grant_type\r\n        // }\r\n        // console.log(parameter)\r\n        return new Promise((resolve, reject)=>{\r\n            clientUtils.requestApi(\"post\", constants.api.user.login, body).then(x=>{\r\n                resolve(x)\r\n            }).catch(e=>{\r\n                reject(e)\r\n            })\r\n        })\r\n    },\r\n    search(param) {\r\n        let parameters =\r\n            (param.page ? '?page=' + param.page : '?page=' + -1) +\r\n            (param.size ? '&size=' + param.size : '&size=' + - 1) +\r\n            (param.queryString ? '&queryString=' + param.queryString : '') +\r\n            (param.active ? '&active=' + param.active : '&active=' + - 1) +\r\n            (param.specialistId ? '&specialistId=' + param.specialistId : '&specialistId=' + - 1) +\r\n            (param.type ? '&type=' + param.type : '&type=' + - 1) +\r\n            (param.roleId ? '&roleId=' + param.roleId : '&roleId=' + - 1) +\r\n            (param.style ? '&style=' + param.style : '&style=' + - 1)\r\n\r\n        return new Promise((resolve, reject) => {\r\n            clientUtils.requestApi(\"get\", constants.api.user.search + parameters, {}).then(x => {\r\n                resolve(x);\r\n            }).catch(e => {\r\n                reject(e);\r\n            })\r\n        })\r\n    },\r\n    updatePassword(id, object) {\r\n        return new Promise((resolve, reject) => {\r\n            clientUtils.requestApi(\"put\", constants.api.user.updatePassword + \"/\" + id, object).then(x => {\r\n                resolve(x);\r\n            }).catch(e => {\r\n                reject(e);\r\n            })\r\n        });\r\n    },\r\n    create(object) {\r\n        return new Promise((resolve, reject) => {\r\n            clientUtils.requestApi(\"post\", constants.api.user.create, object).then(x => {\r\n                resolve(x);\r\n            }).catch(e => {\r\n                reject(e);\r\n            })\r\n        });\r\n    },\r\n    update(id, object) {\r\n        return new Promise((resolve, reject) => {\r\n            clientUtils.requestApi(\"put\", constants.api.user.update + \"/\" + id, object).then(x => {\r\n                resolve(x);\r\n            }).catch(e => {\r\n                reject(e);\r\n            })\r\n        });\r\n    },\r\n    block(id, object) {\r\n        return new Promise((resolve, reject) => {\r\n            clientUtils.requestApi(\"put\", constants.api.user.block + \"/\" + id, object).then(x => {\r\n                resolve(x);\r\n            }).catch(e => {\r\n                reject(e);\r\n            })\r\n        });\r\n    },\r\n    active(id, object) {\r\n        return new Promise((resolve, reject) => {\r\n            clientUtils.requestApi(\"put\", constants.api.user.active + \"/\" + id, object).then(x => {\r\n                resolve(x);\r\n            }).catch(e => {\r\n                reject(e);\r\n            })\r\n        });\r\n    },\r\n    getDetail(id) {\r\n        return new Promise((resolve, reject) => {\r\n            clientUtils.requestApi(\"get\", constants.api.user.detail + \"/\" + id).then(x => {\r\n                resolve(x);\r\n            }).catch(e => {\r\n                reject(e);\r\n            })\r\n        });\r\n    },\r\n\r\n    register(object) {\r\n        return new Promise((resolve, reject) => {\r\n            clientUtils.requestApi(\"post\", constants.api.user.register, object).then(x => {\r\n                resolve(x);\r\n            }).catch(e => {\r\n                reject(e);\r\n            })\r\n        });\r\n    },\r\n    getAll(){\r\n        return new Promise((resolve, reject) => {\r\n            clientUtils.requestApi(\"get\", constants.api.user.getAll, {}).then(x => {\r\n                resolve(x);\r\n            }).catch(e => {\r\n                reject(e);\r\n            })\r\n        });\r\n    }\r\n}   "]},"metadata":{},"sourceType":"module"}