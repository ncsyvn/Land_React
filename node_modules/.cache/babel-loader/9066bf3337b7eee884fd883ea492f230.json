{"ast":null,"code":"var _jsxFileName = \"D:\\\\STUDIES\\\\N4_K2_L\\u1EACP TR\\xCCNH N\\xC2NG CAO\\\\land-project-react\\\\src\\\\sites\\\\admin\\\\containers\\\\user\\\\create-update-user.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux'; //toast\n\nimport { toast } from 'react-toastify';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport userProvider from '../../../../data-access/user-provider'; //UI\n\nimport { ValidatorForm, TextValidator, SelectValidator } from 'react-material-ui-form-validator';\nimport axios from 'axios';\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }));\n});\n\nclass ModalAddUpdate extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClose = () => {\n      this.props.callbackOff();\n    };\n\n    this.create = () => {\n      let param = {\n        Email: this.state.userName,\n        Password: this.state.password,\n        ConfirmPassword: this.state.repeat_password\n      };\n      axios.post(\"https://localhost:44334/api/Account/Register\", param, {\n        'Content-Type': 'application/json'\n      }).then(res => {\n        if (res.status == 200 && res.data == \"\" && res.statusText == \"\") {\n          toast.success(\"Tạo mới thành công\", {\n            position: toast.POSITION.TOP_RIGHT\n          });\n          window.location.reload();\n        } else {\n          toast.error(\"Tạo mới thất bại\", {\n            position: toast.POSITION.TOP_RIGHT\n          });\n          window.location.reload();\n        }\n      }).catch(e => {\n        console.log(e);\n      });\n    };\n\n    this.state = {\n      open: true,\n      userName: this.props.data && this.props.data.UserName ? this.props.data.userName : '',\n      password: this.props.data && this.props.data.password ? this.props.data.password : '',\n      image: this.props.data && this.props.data.image ? this.props.data.image : '',\n      description: this.props.data && this.props.data.description ? this.props.data.description : '',\n      repeat_password: ''\n    };\n  }\n\n  componentDidMount() {\n    ValidatorForm.addValidationRule('isPasswordMatch', value => {\n      if (value !== this.state.password) {\n        return false;\n      }\n\n      return true;\n    });\n    ValidatorForm.addValidationRule('minLength', value => {\n      if (value.length < 8) {\n        return false;\n      }\n\n      return true;\n    });\n    ValidatorForm.addValidationRule('maxLength', value => {\n      if (value > 20) {\n        return false;\n      }\n\n      return true;\n    });\n  }\n\n  componentWillUnmount() {\n    ValidatorForm.removeValidationRule('isPasswordMatch');\n    ValidatorForm.removeValidationRule('minLength');\n    ValidatorForm.removeValidationRule('maxLength');\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const _this$state = this.state,\n          userName = _this$state.userName,\n          password = _this$state.password,\n          repeat_password = _this$state.repeat_password;\n    return React.createElement(Dialog, {\n      open: this.state.open,\n      TransitionComponent: Transition,\n      keepMounted: true,\n      onClose: this.handleClose,\n      fullWidth: \"md\",\n      maxWidth: \"md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(ValidatorForm, {\n      onSubmit: this.create,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, this.props.data.UserId ? React.createElement(DialogTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"C\\u1EADp nh\\u1EADt ng\\u01B0\\u1EDDi d\\xF9ng\") : React.createElement(DialogTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Th\\xEAm m\\u1EDBi ng\\u01B0\\u1EDDi d\\xF9ng\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"T\\xEAn ng\\u01B0\\u1EDDi d\\xF9ng(*)\"), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(TextValidator, {\n      value: userName,\n      placeholder: \"Nh\\u1EADp t\\xEAn ng\\u01B0\\u1EDDi d\\xF9ng\",\n      className: classes.textField,\n      validators: [\"required\"],\n      errorMessages: ['Tên người dùng không được bỏ trống!'],\n      onChange: event => {\n        // this.data2.userName = event.target.value;\n        this.setState({\n          userName: event.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"M\\u1EADt kh\\u1EA9u(*)\"), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(TextValidator, {\n      value: password,\n      type: \"password\",\n      placeholder: \"Nh\\u1EADp m\\u1EADt kh\\u1EA9u\",\n      className: classes.textField,\n      validators: [\"required\", \"minLength\", \"maxLength\"],\n      errorMessages: ['Mật khẩu không được bỏ trống!', \"Mật khẩu phải dài ít nhất 8 kí tự, nhiều nhất 20 kí tự\", \"Mật khẩu phải dài ít nhất 8 kí tự, nhiều nhất 20 kí tự\"],\n      onChange: event => {\n        // this.data2.password = event.target.value;\n        this.setState({\n          password: event.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Nh\\u1EADp l\\u1EA1i m\\u1EADt kh\\u1EA9u\"), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(TextValidator, {\n      value: repeat_password,\n      placeholder: \"Nh\\u1EADp l\\u1EA1i m\\u1EADt kh\\u1EA9u\",\n      className: classes.textField,\n      onChange: event => {\n        this.setState({\n          repeat_password: event.target.value\n        });\n      },\n      validators: ['isPasswordMatch'],\n      errorMessages: ['Nhập lại mật khẩu không đúng'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    })))), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Ok\")))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userApp: state.userApp\n  };\n}\n\nconst styles = theme => ({\n  row: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  textField: {\n    width: '100%'\n  },\n  avatar: {\n    margin: 10\n  },\n  bigAvatar: {\n    width: 60,\n    height: 60\n  },\n  helpBlock: {\n    color: 'red'\n  },\n  textRight: {\n    float: 'right'\n  }\n});\n\nexport default withStyles(styles)(connect(mapStateToProps)(ModalAddUpdate));","map":{"version":3,"sources":["D:/STUDIES/N4_K2_LẬP TRÌNH NÂNG CAO/land-project-react/src/sites/admin/containers/user/create-update-user.js"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Slide","Grid","withStyles","connect","toast","ToastContainer","userProvider","ValidatorForm","TextValidator","SelectValidator","axios","Transition","forwardRef","props","ref","ModalAddUpdate","Component","constructor","handleClose","callbackOff","create","param","Email","state","userName","Password","password","ConfirmPassword","repeat_password","post","then","res","status","data","statusText","success","position","POSITION","TOP_RIGHT","window","location","reload","error","catch","e","console","log","open","UserName","image","description","componentDidMount","addValidationRule","value","length","componentWillUnmount","removeValidationRule","render","classes","UserId","textField","event","setState","target","mapStateToProps","userApp","styles","theme","row","display","justifyContent","width","avatar","margin","bigAvatar","height","helpBlock","color","textRight","float"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\n\r\n//toast\r\nimport { toast } from 'react-toastify';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\n\r\nimport userProvider from '../../../../data-access/user-provider'\r\n\r\n//UI\r\nimport { ValidatorForm, TextValidator, SelectValidator } from 'react-material-ui-form-validator';\r\n\r\nimport axios from 'axios';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nclass ModalAddUpdate extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: true,\r\n            userName: this.props.data && this.props.data.UserName ? this.props.data.userName : '',\r\n            password: this.props.data && this.props.data.password ? this.props.data.password : '',\r\n            image: this.props.data && this.props.data.image ? this.props.data.image : '',\r\n            description: this.props.data && this.props.data.description ? this.props.data.description : '',\r\n            repeat_password: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\r\n            if (value !== this.state.password) {\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        ValidatorForm.addValidationRule('minLength', (value) => {\r\n            if (value.length < 8) {\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        ValidatorForm.addValidationRule('maxLength', (value) => {\r\n            if (value > 20) {\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ValidatorForm.removeValidationRule('isPasswordMatch');\r\n        ValidatorForm.removeValidationRule('minLength');\r\n        ValidatorForm.removeValidationRule('maxLength');\r\n    }\r\n\r\n\r\n    handleClose = () => {\r\n        this.props.callbackOff()\r\n    };\r\n\r\n    create = () => {\r\n        let param = {\r\n            Email: this.state.userName,\r\n            Password: this.state.password,\r\n            ConfirmPassword: this.state.repeat_password\r\n        }\r\n        axios.post(\"https://localhost:44334/api/Account/Register\", param, { 'Content-Type': 'application/json' }).then(res => {\r\n            if (res.status == 200 && res.data == \"\" && res.statusText == \"\") {\r\n                toast.success(\"Tạo mới thành công\", {\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                })\r\n                window.location.reload()\r\n            }\r\n            else {\r\n                toast.error(\"Tạo mới thất bại\", {\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                })\r\n                window.location.reload()\r\n            }\r\n        }).catch(e => {\r\n            console.log(e)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props\r\n        const { userName, password, repeat_password } = this.state\r\n        return (\r\n\r\n            <Dialog open={this.state.open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={this.handleClose}\r\n                fullWidth=\"md\"\r\n                maxWidth=\"md\"\r\n            >\r\n                <DialogContent>\r\n                    <ValidatorForm onSubmit={this.create}>\r\n                        {this.props.data.UserId ? <DialogTitle>Cập nhật người dùng</DialogTitle> : <DialogTitle>Thêm mới người dùng</DialogTitle>}\r\n                        <DialogContent>\r\n\r\n                            <Grid container spacing={16}>\r\n                                <Grid item xs={12} md={3}>Tên người dùng(*)</Grid>\r\n                                <Grid item xs={12} md={9}>\r\n                                    <TextValidator\r\n                                        value={userName}\r\n                                        placeholder=\"Nhập tên người dùng\"\r\n                                        className={classes.textField}\r\n                                        validators={[\"required\"]}\r\n                                        errorMessages={['Tên người dùng không được bỏ trống!']}\r\n                                        onChange={(event) => {\r\n                                            // this.data2.userName = event.target.value;\r\n                                            this.setState({ userName: event.target.value });\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12} md={3}>Mật khẩu(*)</Grid>\r\n                                <Grid item xs={12} md={9}>\r\n                                    <TextValidator\r\n                                        value={password}\r\n                                        type=\"password\"\r\n                                        placeholder=\"Nhập mật khẩu\"\r\n                                        className={classes.textField}\r\n                                        validators={[\"required\", \"minLength\", \"maxLength\"]}\r\n                                        errorMessages={['Mật khẩu không được bỏ trống!', \"Mật khẩu phải dài ít nhất 8 kí tự, nhiều nhất 20 kí tự\", \"Mật khẩu phải dài ít nhất 8 kí tự, nhiều nhất 20 kí tự\"]}\r\n                                        onChange={(event) => {\r\n                                            // this.data2.password = event.target.value;\r\n                                            this.setState({ password: event.target.value });\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12} md={3}>Nhập lại mật khẩu</Grid>\r\n                                <Grid item xs={12} md={9}>\r\n                                    <TextValidator\r\n                                        value={repeat_password}\r\n                                        placeholder=\"Nhập lại mật khẩu\"\r\n                                        className={classes.textField}\r\n                                        onChange={(event) => {\r\n                                            this.setState({ repeat_password: event.target.value })\r\n                                        }}\r\n                                        validators={['isPasswordMatch']}\r\n                                        errorMessages={['Nhập lại mật khẩu không đúng']}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            {/* <Button onClick={this.handleClose} variant=\"contained\" color=\"inherit\">Cancel</Button> */}\r\n                            <Button variant=\"contained\" color=\"primary\" type=\"submit\">Ok</Button>\r\n                            {/* {\r\n                                this.data != JSON.stringify(this.data2) ?\r\n                                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">Ok</Button> :\r\n                                    <Button variant=\"contained\" color=\"primary\" disabled>Ok</Button>\r\n                            } */}\r\n                        </DialogActions>\r\n                    </ValidatorForm>\r\n\r\n                </DialogContent>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        userApp: state.userApp\r\n    };\r\n}\r\n\r\n\r\nconst styles = theme => ({\r\n    row: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    }, textField: {\r\n        width: '100%'\r\n    }, avatar: {\r\n        margin: 10,\r\n    }, bigAvatar: {\r\n        width: 60,\r\n        height: 60,\r\n    }, helpBlock: {\r\n        color: 'red',\r\n    },\r\n    textRight: {\r\n        float: 'right'\r\n    }\r\n});\r\nexport default withStyles(styles)(connect(mapStateToProps)(ModalAddUpdate));"]},"metadata":{},"sourceType":"module"}