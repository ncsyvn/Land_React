{"ast":null,"code":"var CryptoJS = require(\"crypto-js\");\n\nmodule.exports = {\n  save(userId, key, value) {\n    return new Promise((resolve, reject) => {\n      try {\n        var data = {\n          value\n        };\n        let data2 = CryptoJS.AES.encrypt(JSON.stringify(data), \"ISOFHCARE\");\n        localStorage.setItem(userId + \"_\" + key, data2.toString());\n        resolve(true);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  },\n\n  read(userId, key, defaultValue) {\n    try {\n      if (localStorage.hasOwnProperty(userId + \"_\" + key)) {\n        var item = localStorage.getItem(userId + \"_\" + key);\n        var item = CryptoJS.AES.decrypt(item, \"ISOFHCARE\").toString(CryptoJS.enc.Utf8);\n        if (item) try {\n          var data = JSON.parse(item);\n\n          if (data && data.value) {\n            return data.value;\n          }\n        } catch (error) {}\n      }\n\n      return defaultValue;\n    } catch (error) {\n      return defaultValue;\n    }\n  }\n\n};","map":{"version":3,"sources":["D:/STUDIES/JOB/Other Work/Đồ án tốt nghiệp anh Phan/land-project-react/src/data-access/datacache-provider.js"],"names":["CryptoJS","require","module","exports","save","userId","key","value","Promise","resolve","reject","data","data2","AES","encrypt","JSON","stringify","localStorage","setItem","toString","error","read","defaultValue","hasOwnProperty","item","getItem","decrypt","enc","Utf8","parse"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,WAAD,CAAtB;;AACAC,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,IAAI,CAACC,MAAD,EAASC,GAAT,EAAcC,KAAd,EAAqB;AACrB,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,UAAI;AACA,YAAIC,IAAI,GAAG;AACPJ,UAAAA;AADO,SAAX;AAGA,YAAIK,KAAK,GAAGZ,QAAQ,CAACa,GAAT,CAAaC,OAAb,CAAqBC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAArB,EAA2C,WAA3C,CAAZ;AACAM,QAAAA,YAAY,CAACC,OAAb,CAAqBb,MAAM,GAAG,GAAT,GAAeC,GAApC,EAAyCM,KAAK,CAACO,QAAN,EAAzC;AACAV,QAAAA,OAAO,CAAC,IAAD,CAAP;AACH,OAPD,CAOE,OAAOW,KAAP,EAAc;AACZV,QAAAA,MAAM,CAACU,KAAD,CAAN;AACH;AACJ,KAXM,CAAP;AAYH,GAdY;;AAebC,EAAAA,IAAI,CAAChB,MAAD,EAASC,GAAT,EAAcgB,YAAd,EAA4B;AAC5B,QAAI;AACA,UAAIL,YAAY,CAACM,cAAb,CAA4BlB,MAAM,GAAG,GAAT,GAAeC,GAA3C,CAAJ,EAAqD;AACjD,YAAIkB,IAAI,GAAGP,YAAY,CAACQ,OAAb,CAAqBpB,MAAM,GAAG,GAAT,GAAeC,GAApC,CAAX;AACA,YAAIkB,IAAI,GAAGxB,QAAQ,CAACa,GAAT,CAAaa,OAAb,CAAqBF,IAArB,EAA2B,WAA3B,EAAwCL,QAAxC,CAAiDnB,QAAQ,CAAC2B,GAAT,CAAaC,IAA9D,CAAX;AACA,YAAIJ,IAAJ,EACI,IAAI;AACA,cAAIb,IAAI,GAAGI,IAAI,CAACc,KAAL,CAAWL,IAAX,CAAX;;AACA,cAAIb,IAAI,IAAIA,IAAI,CAACJ,KAAjB,EAAwB;AACpB,mBAAOI,IAAI,CAACJ,KAAZ;AACH;AACJ,SALD,CAKE,OAAOa,KAAP,EAAc,CACf;AACR;;AACD,aAAQE,YAAR;AACH,KAdD,CAcE,OAAOF,KAAP,EAAc;AACZ,aAAOE,YAAP;AACH;AACJ;;AAjCY,CAAjB","sourcesContent":["var CryptoJS = require(\"crypto-js\");\r\nmodule.exports = {\r\n    save(userId, key, value) {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                var data = {\r\n                    value\r\n                };\r\n                let data2 = CryptoJS.AES.encrypt(JSON.stringify(data), \"ISOFHCARE\");\r\n                localStorage.setItem(userId + \"_\" + key, data2.toString());\r\n                resolve(true);\r\n            } catch (error) {\r\n                reject(error);\r\n            }\r\n        })\r\n    },\r\n    read(userId, key, defaultValue) {\r\n        try {\r\n            if (localStorage.hasOwnProperty(userId + \"_\" + key)) {\r\n                var item = localStorage.getItem(userId + \"_\" + key);\r\n                var item = CryptoJS.AES.decrypt(item, \"ISOFHCARE\").toString(CryptoJS.enc.Utf8);\r\n                if (item)\r\n                    try {\r\n                        var data = JSON.parse(item);\r\n                        if (data && data.value) {\r\n                            return data.value;\r\n                        }\r\n                    } catch (error) {\r\n                    }\r\n            }\r\n            return (defaultValue);\r\n        } catch (error) {\r\n            return defaultValue;\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}