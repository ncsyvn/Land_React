{"ast":null,"code":"var _jsxFileName = \"D:\\\\STUDIES\\\\N4_K2_L\\u1EACP TR\\xCCNH N\\xC2NG CAO\\\\land-project-react\\\\src\\\\sites\\\\admin\\\\containers\\\\news\\\\create-update-news-category.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux'; //UI\n\nimport { ValidatorForm, TextValidator, SelectValidator } from 'react-material-ui-form-validator';\nimport TextField from '@material-ui/core/TextField';\nimport { ToastContainer, toast } from 'react-toastify';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel'; //Component\n//data-access\n\nimport newsProvider from '../../../../data-access/news-provider';\nimport imageProvider from '../../../../data-access/image-provider';\nimport axios from 'axios';\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }));\n});\n\nclass ModalAddUpdate extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClose = () => {\n      this.props.callbackOff();\n    };\n\n    this.handleActive = () => {\n      this.setState({\n        isActive: !this.state.isActive\n      });\n    };\n\n    this.create = () => {\n      const _this$state = this.state,\n            orderNo = _this$state.orderNo,\n            newCategoryName = _this$state.newCategoryName,\n            newCategoryId = _this$state.newCategoryId,\n            isActive = _this$state.isActive;\n      console.log(this.state); // let id = dataNew ? dataNew.NewId : '';\n\n      let formData = new FormData();\n\n      if (this.props.data.NewCategoryId) {\n        formData.append('NewCategoryId', this.state.dataNewCategory.NewCategoryId);\n        formData.append('NewCategoryName', newCategoryName);\n        formData.append('OrderNo', orderNo);\n        formData.append('IsActive', isActive);\n        axios({\n          url: \"https://localhost:44334/api/NewCategory/update\",\n          method: 'PUT',\n          data: formData,\n          headers: {\n            Accept: 'application/json',\n            'Content-Type': 'multipart/form-data' // 'Authorization': 'Basic YnJva2VyOmJyb2tlcl8xMjM='\n\n          }\n        }).then(res => {\n          console.log(res);\n\n          if (res.data.Code == 200) {\n            toast.success(\"Cập nhật tin tức thành công\", {\n              position: toast.POSITION.TOP_RIGHT\n            });\n            this.handleClose();\n          } else {\n            toast.error(\"Cập nhật tin tức không thành công!\", {\n              position: toast.POSITION.TOP_RIGHT\n            });\n            this.handleClose();\n          }\n        }).catch(e => {\n          toast.error(\"Cập nhật tin tức không thành công!\", {\n            position: toast.POSITION.TOP_RIGHT\n          });\n          this.handleClose();\n        });\n      } else {\n        formData.append('NewCategoryName', this.state.newCategoryName);\n        formData.append('OrderNo', this.state.orderNo);\n        console.log(JSON.stringify(formData));\n        axios({\n          url: \"https://localhost:44334/api/NewCategory/create\",\n          method: 'POST',\n          data: formData,\n          headers: {\n            Accept: 'application/json',\n            'Content-Type': 'multipart/form-data' // 'Authorization': 'Basic YnJva2VyOmJyb2tlcl8xMjM='\n\n          }\n        }).then(res => {\n          console.log(res);\n\n          if (res.data.Code == 200) {\n            toast.success(\"Tạo mới loại tin tức thành công\", {\n              position: toast.POSITION.TOP_RIGHT\n            });\n            this.handleClose();\n          }\n        }).catch(e => {\n          toast.error(\"Tạo mới loại tin tức không thành công!\", {\n            position: toast.POSITION.TOP_RIGHT\n          });\n          this.handleClose();\n        });\n      }\n    };\n\n    this.state = {\n      open: true,\n      dataNewCategory: this.props.data,\n      newCategoryName: this.props.data && this.props.data.NewCategoryName ? this.props.data.NewCategoryName : '',\n      newCategoryId: this.props.data && this.props.data.NewCategoryId ? this.props.newCategoryId : '',\n      orderNo: this.props.data && this.props.data.OrderNo ? this.props.data.OrderNo : '',\n      isActive: this.props.data && this.props.data.IsActive ? this.props.data.IsActive : '',\n      createdTime: this.props.data && this.props.data.CreatedTime ? this.props.data.CreatedTime : '',\n      updateTime: this.props.data && this.props.data.UpdateTime ? this.props.data.UpdateTime : ''\n    };\n    this.data = JSON.stringify(this.props.data);\n    this.data2 = this.props.data;\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const _this$state2 = this.state,\n          dataNewCategory = _this$state2.dataNewCategory,\n          newCategoryName = _this$state2.newCategoryName,\n          orderNo = _this$state2.orderNo,\n          isActive = _this$state2.isActive,\n          createdTime = _this$state2.createdTime,\n          updateTime = _this$state2.updateTime;\n    const classes = this.props.classes;\n    console.log(\"active\", this.state.isActive);\n    return React.createElement(Dialog, {\n      open: this.state.open,\n      TransitionComponent: Transition,\n      keepMounted: true,\n      onClose: this.handleClose,\n      fullWidth: \"sm\",\n      maxWidth: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(ValidatorForm, {\n      onSubmit: this.create,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \" \", this.props.data && this.props.data.NewCategoryId ? 'Cập nhật loại tin tức ' : 'Thêm mới loại tin tức'), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"T\\xEAn lo\\u1EA1i tin t\\u1EE9c(*)\"), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(TextValidator, {\n      value: newCategoryName,\n      placeholder: \"Nh\\u1EADp t\\xEAn lo\\u1EA1i tin t\\u1EE9c\",\n      className: classes.textField,\n      validators: [\"required\"],\n      errorMessages: ['Tên loại tin tức không được bỏ trống!'],\n      onChange: event => {\n        // this.data2.NewCategoryName = event.target.value;\n        this.setState({\n          newCategoryName: event.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Th\\u1EE9 t\\u1EF1\"), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(TextValidator, {\n      value: orderNo,\n      type: \"number\",\n      className: classes.textField,\n      onChange: event => {\n        // this.data2.orderNo = event.target.value;\n        this.setState({\n          orderNo: event.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    })), this.props.data && this.props.data.NewCategoryId ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, isActive ? React.createElement(Button, {\n      onClick: this.handleActive,\n      className: classes.btnActive,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Inactive\") : React.createElement(Button, {\n      onClick: this.handleActive,\n      className: classes.btnActive,\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Active\")) : \"\")), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClose,\n      variant: \"contained\",\n      color: \"inherit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Ok\"))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userApp: state.userApp\n  };\n}\n\nconst styles = theme => ({\n  row: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  textField: {\n    width: '100%'\n  },\n  avatar: {\n    margin: 10\n  },\n  bigAvatar: {\n    width: 60,\n    height: 60\n  },\n  helpBlock: {\n    color: 'red'\n  },\n  textRight: {\n    float: 'right'\n  },\n  btnActive: {\n    position: 'absolute',\n    bottom: 6,\n    right: 180\n  }\n});\n\nexport default withStyles(styles)(connect(mapStateToProps)(ModalAddUpdate));","map":{"version":3,"sources":["D:/STUDIES/N4_K2_LẬP TRÌNH NÂNG CAO/land-project-react/src/sites/admin/containers/news/create-update-news-category.js"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Slide","Grid","withStyles","connect","ValidatorForm","TextValidator","SelectValidator","TextField","ToastContainer","toast","CKEditor","ClassicEditor","MenuItem","InputLabel","newsProvider","imageProvider","axios","Transition","forwardRef","props","ref","ModalAddUpdate","Component","constructor","handleClose","callbackOff","handleActive","setState","isActive","state","create","orderNo","newCategoryName","newCategoryId","console","log","formData","FormData","data","NewCategoryId","append","dataNewCategory","url","method","headers","Accept","then","res","Code","success","position","POSITION","TOP_RIGHT","error","catch","e","JSON","stringify","open","NewCategoryName","OrderNo","IsActive","createdTime","CreatedTime","updateTime","UpdateTime","data2","componentDidMount","render","classes","textField","event","target","value","btnActive","mapStateToProps","userApp","styles","theme","row","display","justifyContent","width","avatar","margin","bigAvatar","height","helpBlock","color","textRight","float","bottom","right"],"mappings":"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","sourcesContent":["\r\nimport React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\n//UI\r\nimport { ValidatorForm, TextValidator, SelectValidator } from 'react-material-ui-form-validator';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n//Component\r\n\r\n//data-access\r\nimport newsProvider from '../../../../data-access/news-provider'\r\nimport imageProvider from '../../../../data-access/image-provider'\r\nimport axios from 'axios';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nclass ModalAddUpdate extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: true,\r\n            dataNewCategory: this.props.data,\r\n            newCategoryName: this.props.data && this.props.data.NewCategoryName ? this.props.data.NewCategoryName : '',\r\n            newCategoryId:this.props.data &&this.props.data.NewCategoryId?this.props.newCategoryId:'',\r\n            orderNo: this.props.data && this.props.data.OrderNo ? this.props.data.OrderNo : '',\r\n            isActive: this.props.data && this.props.data.IsActive ? this.props.data.IsActive : '',\r\n            createdTime: this.props.data && this.props.data.CreatedTime ? this.props.data.CreatedTime : '',\r\n            updateTime: this.props.data && this.props.data.UpdateTime ? this.props.data.UpdateTime : '',\r\n        }\r\n        this.data = JSON.stringify(this.props.data);\r\n        this.data2 = this.props.data;\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.callbackOff()\r\n    };\r\n\r\n    handleActive = () => {\r\n        this.setState({\r\n            isActive: !this.state.isActive\r\n        })\r\n    }\r\n    \r\n\r\n    create = () => {\r\n        const { orderNo, newCategoryName, newCategoryId,isActive } = this.state;\r\n        console.log(this.state)\r\n        // let id = dataNew ? dataNew.NewId : '';\r\n        let formData = new FormData();\r\n        if (this.props.data.NewCategoryId) {\r\n            formData.append('NewCategoryId', this.state.dataNewCategory.NewCategoryId)\r\n            formData.append('NewCategoryName', newCategoryName)\r\n            formData.append('OrderNo', orderNo)\r\n            formData.append('IsActive',isActive)\r\n\r\n            axios({\r\n                url: \"https://localhost:44334/api/NewCategory/update\",\r\n                method: 'PUT',\r\n                data: formData,\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'multipart/form-data',\r\n                    // 'Authorization': 'Basic YnJva2VyOmJyb2tlcl8xMjM='\r\n                }\r\n            })\r\n                .then(res => {\r\n                    console.log(res)\r\n                    if (res.data.Code == 200) {\r\n                        toast.success(\"Cập nhật tin tức thành công\", {\r\n                            position: toast.POSITION.TOP_RIGHT\r\n                        })\r\n                        this.handleClose();\r\n\r\n                    }\r\n                    else {\r\n                        toast.error(\"Cập nhật tin tức không thành công!\", {\r\n                            position: toast.POSITION.TOP_RIGHT\r\n                        })\r\n                        this.handleClose()\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    toast.error(\"Cập nhật tin tức không thành công!\", {\r\n                        position: toast.POSITION.TOP_RIGHT\r\n                    })\r\n                    this.handleClose()\r\n                })\r\n        }\r\n        else {\r\n\r\n            formData.append('NewCategoryName', this.state.newCategoryName)\r\n            formData.append('OrderNo', this.state.orderNo)\r\n            console.log(JSON.stringify(formData))\r\n            axios({\r\n                url: \"https://localhost:44334/api/NewCategory/create\",\r\n                method: 'POST',\r\n                data: formData,\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'multipart/form-data',\r\n                    // 'Authorization': 'Basic YnJva2VyOmJyb2tlcl8xMjM='\r\n                }\r\n            })\r\n                .then(res => {\r\n                    console.log(res)\r\n                    if (res.data.Code == 200) {\r\n                        toast.success(\"Tạo mới loại tin tức thành công\", {\r\n                            position: toast.POSITION.TOP_RIGHT\r\n                        })\r\n                        this.handleClose();\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    toast.error(\"Tạo mới loại tin tức không thành công!\", {\r\n                        position: toast.POSITION.TOP_RIGHT\r\n                    })\r\n                    this.handleClose()\r\n                })\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const { dataNewCategory, newCategoryName, orderNo, isActive, createdTime, updateTime } = this.state\r\n        const { classes } = this.props\r\n        console.log(\"active\",this.state.isActive)\r\n        return (\r\n\r\n            <Dialog open={this.state.open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={this.handleClose}\r\n                fullWidth=\"sm\"\r\n                maxWidth=\"sm\"\r\n            >\r\n                <ValidatorForm onSubmit={this.create}>\r\n                    {/* <DialogTitle>{content}</DialogTitle> */}\r\n                    <DialogTitle> {this.props.data && this.props.data.NewCategoryId ? 'Cập nhật loại tin tức ' : 'Thêm mới loại tin tức'}</DialogTitle>\r\n                    <DialogContent>\r\n                        <Grid container>\r\n                            <Grid item xs={12} md={3}>Tên loại tin tức(*)</Grid>\r\n                            <Grid item xs={12} md={9}>\r\n                                <TextValidator\r\n                                    value={newCategoryName}\r\n                                    placeholder=\"Nhập tên loại tin tức\"\r\n                                    className={classes.textField}\r\n                                    validators={[\"required\"]}\r\n                                    errorMessages={['Tên loại tin tức không được bỏ trống!']}\r\n                                    onChange={(event) => {\r\n                                        // this.data2.NewCategoryName = event.target.value;\r\n                                        this.setState({ newCategoryName: event.target.value });\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} md={3}>Thứ tự</Grid>\r\n                            <Grid item xs={12} md={9}>\r\n                                <TextValidator\r\n                                    value={orderNo}\r\n                                    type=\"number\"\r\n                                    className={classes.textField}\r\n                                    onChange={(event) => {\r\n                                        // this.data2.orderNo = event.target.value;\r\n                                        this.setState({ orderNo: event.target.value })\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                            {this.props.data && this.props.data.NewCategoryId ?\r\n                                <div>\r\n                                    {isActive ? <Button onClick={this.handleActive} className={classes.btnActive} color=\"primary\">Inactive</Button> : <Button onClick={this.handleActive} className={classes.btnActive} color=\"secondary\">Active</Button>\r\n\r\n                                    }\r\n                                </div> : \"\"\r\n                            }\r\n                        </Grid>\r\n\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} variant=\"contained\" color=\"inherit\">Cancel</Button>\r\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\">Ok</Button>\r\n                        {/* {\r\n                            this.data != JSON.stringify(this.data2) ?\r\n                                <Button variant=\"contained\" color=\"primary\" type=\"submit\">Ok</Button> :\r\n                                <Button variant=\"contained\" color=\"primary\" disabled>Ok</Button>\r\n                        } */}\r\n                    </DialogActions>\r\n                </ValidatorForm>\r\n            </Dialog >\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        userApp: state.userApp\r\n    };\r\n}\r\n\r\n\r\nconst styles = theme => ({\r\n    row: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    }, textField: {\r\n        width: '100%'\r\n    }, avatar: {\r\n        margin: 10,\r\n    }, bigAvatar: {\r\n        width: 60,\r\n        height: 60,\r\n    }, helpBlock: {\r\n        color: 'red',\r\n    },\r\n    textRight: {\r\n        float: 'right'\r\n    }\r\n    , btnActive: {\r\n        position: 'absolute',\r\n        bottom: 6,\r\n        right: 180\r\n    }\r\n});\r\nexport default withStyles(styles)(connect(mapStateToProps)(ModalAddUpdate));"]},"metadata":{},"sourceType":"module"}